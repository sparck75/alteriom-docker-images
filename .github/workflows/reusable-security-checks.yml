# Reusable Security Workflow
# This workflow can be called from other repositories to provide standardized security checks
# Usage in other repositories:
# 
# name: Security Checks
# on: [push, pull_request]
# jobs:
#   security:
#     uses: sparck75/alteriom-docker-images/.github/workflows/reusable-security-checks.yml@main
#     secrets: inherit

name: Reusable Security Checks

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: false
        type: string
        default: '3.11'
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '18'
      enable-dependency-check:
        description: 'Enable dependency vulnerability scanning'
        required: false
        type: boolean
        default: true
      enable-secret-scan:
        description: 'Enable secret scanning'
        required: false
        type: boolean
        default: true
      enable-code-analysis:
        description: 'Enable static code analysis'
        required: false
        type: boolean
        default: true

jobs:
  security-checks:
    runs-on: ubuntu-latest
    name: Comprehensive Security Analysis
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        if: inputs.enable-dependency-check || inputs.enable-secret-scan
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Set up Node.js
        if: inputs.enable-dependency-check
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install security tools
        if: inputs.enable-dependency-check || inputs.enable-secret-scan
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit semgrep
          npm install -g audit-ci @cyclonedx/cyclonedx-npm

      - name: Run dependency vulnerability scan
        if: inputs.enable-dependency-check
        run: |
          echo "🔍 Scanning Python dependencies..."
          if [ -f "requirements.txt" ]; then
            safety check -r requirements.txt --json --output safety-report.json || true
          fi
          
          echo "🔍 Scanning Node.js dependencies..."
          if [ -f "package.json" ]; then
            npm audit --audit-level=moderate --json > npm-audit.json || true
            audit-ci --moderate || true
          fi

      - name: Run secret scanning
        if: inputs.enable-secret-scan
        run: |
          echo "🔍 Scanning for secrets..."
          # Use GitHub's secret scanning patterns
          git log --all --full-history -- . | grep -iE "(password|token|key|secret|api)" > potential-secrets.txt || true
          
          # Check for common secret patterns
          grep -rE "(password\s*=|token\s*=|key\s*=|secret\s*=)" . --exclude-dir=.git > pattern-secrets.txt || true

      - name: Run static code analysis
        if: inputs.enable-code-analysis
        run: |
          echo "🔍 Running static code analysis..."
          if [ -f "requirements.txt" ] || find . -name "*.py" -type f | head -1; then
            bandit -r . -f json -o bandit-report.json || true
          fi
          
          # Run semgrep for multiple languages
          semgrep --config=auto . --json --output=semgrep-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            safety-report.json
            npm-audit.json
            potential-secrets.txt
            pattern-secrets.txt
            bandit-report.json
            semgrep-report.json
          retention-days: 30

      - name: Security summary
        if: always()
        run: |
          echo "## 🛡️ Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "safety-report.json" ]; then
            echo "✅ Python dependency scan completed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "npm-audit.json" ]; then
            echo "✅ Node.js dependency scan completed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "bandit-report.json" ]; then
            echo "✅ Python security analysis completed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "semgrep-report.json" ]; then
            echo "✅ Multi-language code analysis completed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 All security reports have been uploaded as artifacts" >> $GITHUB_STEP_SUMMARY